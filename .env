# STORAGE OPTIONS: redis | file | database | nosql |session
STORAGE_DRIVER=database

# REDIS CONFIG (only if redis is used)
REDIS_HOST=key-mullet-23768.upstash.io
REDIS_PORT=6379
REDIS_PASSWORD=AVzYAAIjcDFjOGI3NWRlOTVlMTY0OGEwOGMwMTkzNGM4ZGRhZjRiYXAxMA #leave empty if no password is set
REDIS_SCHEME=tls #leave empty if no scheme is set



#DATABASE CONFIG (only if database is used,supports all databases that are supported by the PHP PDO driver)
#by default the 'analytics' and 'ratelimiter' tables are created in the database name you specified
DB_DRIVER=sqlite   # Or 'sqlite' / 'pgsql' or 'mysql' or the other 10 Relational DB supported by PDO
DB_HOST=localhost
DB_NAME=test
DB_USER=pma
DB_PASS=
RATELIMITER_TABLE = #can be left blank
ANALYTICS_TABLE = #can be left blank

#SQLITE CONFIG (only if sqlite is used)
DB_FILE_NAME=database.sqlite  # Name of the SQLite database file. You can leave blank and an sqlite database is dynamically created at thr src\Storage directory of php rate limiter package

#SESSION CONFIG
SESSION_LIFETIME = 259200 #a day


# FILE CONFIG (only if file is used)
STORAGE_STRICT_MODE = false #leave this alone,only pick true for debugging purpose
STORAGE_FILE_NAME= rate_limit.json 
ANALYTICS_STORAGE_FILE_NAME = analytics_storage.json #default NAME for analytics storage file ,if not present..a new one is created 
RATELIMITER_STORAGE_FILE_NAME = ratelimiter_storage.json #default NAME for rate limiter storage file,if not present..a new one is created 


STORAGE_LOCK_TIMEOUT=3 #lock file for maximum of secs. Default is 3
STORAGE_LOCK_WAIT=200000 #check if file is still locked every amount of secs you set. Default is 500ms
